/* automatically generated by rust-bindgen 0.71.1 */

#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Widget {
    _unused: [u8; 0],
}
pub type Fl_Callback = ::core::option::Option<
    unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::core::ffi::c_void),
>;
pub type custom_handler_callback = ::core::option::Option<
    unsafe extern "C" fn(
        arg1: *mut Fl_Widget,
        arg2: ::core::ffi::c_int,
        arg3: *mut ::core::ffi::c_void,
    ) -> ::core::ffi::c_int,
>;
pub type custom_draw_callback = ::core::option::Option<
    unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::core::ffi::c_void),
>;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Table {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn Fl_Table_new(
        x: ::core::ffi::c_int,
        y: ::core::ffi::c_int,
        width: ::core::ffi::c_int,
        height: ::core::ffi::c_int,
        title: *const ::core::ffi::c_char,
    ) -> *mut Fl_Table;
}
unsafe extern "C" {
    pub fn Fl_Table_x(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_y(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_width(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_height(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_label(arg1: *mut Fl_Table) -> *const ::core::ffi::c_char;
}
unsafe extern "C" {
    pub fn Fl_Table_set_label(arg1: *mut Fl_Table, title: *const ::core::ffi::c_char);
}
unsafe extern "C" {
    pub fn Fl_Table_redraw(arg1: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_show(arg1: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_hide(arg1: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_activate(arg1: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_deactivate(arg1: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_redraw_label(arg1: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_resize(
        arg1: *mut Fl_Table,
        x: ::core::ffi::c_int,
        y: ::core::ffi::c_int,
        width: ::core::ffi::c_int,
        height: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_widget_resize(
        arg1: *mut Fl_Table,
        x: ::core::ffi::c_int,
        y: ::core::ffi::c_int,
        width: ::core::ffi::c_int,
        height: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_tooltip(arg1: *mut Fl_Table) -> *const ::core::ffi::c_char;
}
unsafe extern "C" {
    pub fn Fl_Table_set_tooltip(arg1: *mut Fl_Table, txt: *const ::core::ffi::c_char);
}
unsafe extern "C" {
    pub fn Fl_Table_get_type(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_type(arg1: *mut Fl_Table, typ: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_color(arg1: *mut Fl_Table) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_set_color(arg1: *mut Fl_Table, color: ::core::ffi::c_uint);
}
unsafe extern "C" {
    pub fn Fl_Table_measure_label(
        arg1: *const Fl_Table,
        arg2: *mut ::core::ffi::c_int,
        arg3: *mut ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_label_color(arg1: *mut Fl_Table) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_set_label_color(arg1: *mut Fl_Table, color: ::core::ffi::c_uint);
}
unsafe extern "C" {
    pub fn Fl_Table_label_font(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_label_font(arg1: *mut Fl_Table, font: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_label_size(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_label_size(arg1: *mut Fl_Table, sz: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_label_type(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_label_type(arg1: *mut Fl_Table, typ: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_box(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_box(arg1: *mut Fl_Table, typ: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_changed(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_changed(arg1: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_clear_changed(arg1: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_align(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_align(arg1: *mut Fl_Table, typ: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_delete(arg1: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_set_image(arg1: *mut Fl_Table, arg2: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_handle(
        self_: *mut Fl_Table,
        cb: custom_handler_callback,
        data: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_handle_event(
        self_: *mut Fl_Table,
        event: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_draw(
        self_: *mut Fl_Table,
        cb: custom_draw_callback,
        data: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_resize_callback(
        self_: *mut Fl_Table,
        cb: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                x: ::core::ffi::c_int,
                y: ::core::ffi::c_int,
                w: ::core::ffi::c_int,
                h: ::core::ffi::c_int,
                arg2: *mut ::core::ffi::c_void,
            ),
        >,
        data: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_set_when(arg1: *mut Fl_Table, arg2: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_when(arg1: *const Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_image(arg1: *const Fl_Table) -> *const ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_parent(self_: *const Fl_Table) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_selection_color(arg1: *mut Fl_Table) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_set_selection_color(arg1: *mut Fl_Table, color: ::core::ffi::c_uint);
}
unsafe extern "C" {
    pub fn Fl_Table_do_callback(arg1: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_inside(
        self_: *const Fl_Table,
        arg1: *mut ::core::ffi::c_void,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_window(arg1: *const Fl_Table) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_top_window(arg1: *const Fl_Table) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_takes_events(arg1: *const Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_user_data(arg1: *const Fl_Table) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_take_focus(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_visible_focus(self_: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_clear_visible_focus(self_: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_visible_focus(self_: *mut Fl_Table, v: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_has_visible_focus(self_: *mut Fl_Table) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_set_user_data(arg1: *mut Fl_Table, data: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_draw_data(self_: *const Fl_Table) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_handle_data(self_: *const Fl_Table) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_set_draw_data(self_: *mut Fl_Table, data: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_set_handle_data(self_: *mut Fl_Table, data: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_damage(self_: *const Fl_Table) -> ::core::ffi::c_uchar;
}
unsafe extern "C" {
    pub fn Fl_Table_set_damage(self_: *mut Fl_Table, flag: ::core::ffi::c_uchar);
}
unsafe extern "C" {
    pub fn Fl_Table_set_damage_area(
        self_: *mut Fl_Table,
        flag: ::core::ffi::c_uchar,
        x: ::core::ffi::c_int,
        y: ::core::ffi::c_int,
        w: ::core::ffi::c_int,
        h: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_clear_damage(self_: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_as_window(self_: *mut Fl_Table) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_as_group(self_: *mut Fl_Table) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_set_deimage(arg1: *mut Fl_Table, arg2: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_deimage(arg1: *const Fl_Table) -> *const ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_set_callback(
        arg1: *mut Fl_Table,
        arg2: Fl_Callback,
        arg3: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_visible(self_: *const Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_visible_r(self_: *const Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_active(self_: *const Fl_Table) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_active_r(self_: *const Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_callback(self_: *const Fl_Table) -> Fl_Callback;
}
unsafe extern "C" {
    pub fn Fl_Table_set_deletion_callback(
        self_: *mut Fl_Table,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::core::ffi::c_void),
        >,
        data: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_from_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Table;
}
unsafe extern "C" {
    pub fn Fl_Table_from_derived_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Table;
}
unsafe extern "C" {
    pub fn Fl_Table_super_draw(ptr: *mut Fl_Widget, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_super_draw_first(ptr: *mut Fl_Widget, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_super_handle_first(ptr: *mut Fl_Widget, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_begin(self_: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_end(self_: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_find(
        self_: *mut Fl_Table,
        arg1: *const ::core::ffi::c_void,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_add(self_: *mut Fl_Table, arg1: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_insert(
        self_: *mut Fl_Table,
        arg1: *mut ::core::ffi::c_void,
        pos: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_remove(self_: *mut Fl_Table, wid: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_remove_by_index(self_: *mut Fl_Table, idx: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_clear(self_: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_children(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_child(arg1: *mut Fl_Table, index: ::core::ffi::c_int) -> *mut Fl_Widget;
}
unsafe extern "C" {
    pub fn Fl_Table_resizable(self_: *mut Fl_Table, arg1: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_set_clip_children(self_: *mut Fl_Table, c: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_clip_children(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_init_sizes(self_: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_draw_child(self_: *const Fl_Table, w: *mut Fl_Widget);
}
unsafe extern "C" {
    pub fn Fl_Table_update_child(self_: *const Fl_Table, w: *mut Fl_Widget);
}
unsafe extern "C" {
    pub fn Fl_Table_draw_outside_label(self_: *const Fl_Table, w: *const Fl_Widget);
}
unsafe extern "C" {
    pub fn Fl_Table_draw_children(self_: *mut Fl_Table);
}
unsafe extern "C" {
    pub fn Fl_Table_set_table_box(self_: *mut Fl_Table, val: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_table_box(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_rows(self_: *mut Fl_Table, val: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_rows(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_cols(self_: *mut Fl_Table, val: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_cols(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_visible_cells(
        self_: *mut Fl_Table,
        r1: *mut ::core::ffi::c_int,
        r2: *mut ::core::ffi::c_int,
        c1: *mut ::core::ffi::c_int,
        c2: *mut ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_is_interactive_resize(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_row_resize(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_row_resize(self_: *mut Fl_Table, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_col_resize(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_col_resize(self_: *mut Fl_Table, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_col_resize_min(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_col_resize_min(self_: *mut Fl_Table, val: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_row_resize_min(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_row_resize_min(self_: *mut Fl_Table, val: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_row_header(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_row_header(self_: *mut Fl_Table, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_col_header(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_col_header(self_: *mut Fl_Table, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_set_col_header_height(self_: *mut Fl_Table, height: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_col_header_height(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_row_header_width(self_: *mut Fl_Table, width: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_row_header_width(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_row_header_color(self_: *mut Fl_Table, val: ::core::ffi::c_uint);
}
unsafe extern "C" {
    pub fn Fl_Table_row_header_color(self_: *mut Fl_Table) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_set_col_header_color(self_: *mut Fl_Table, val: ::core::ffi::c_uint);
}
unsafe extern "C" {
    pub fn Fl_Table_col_header_color(self_: *mut Fl_Table) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_set_row_height(
        self_: *mut Fl_Table,
        row: ::core::ffi::c_int,
        height: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_row_height(self_: *mut Fl_Table, row: ::core::ffi::c_int)
    -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_col_width(
        self_: *mut Fl_Table,
        col: ::core::ffi::c_int,
        width: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_col_width(self_: *mut Fl_Table, col: ::core::ffi::c_int) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_row_height_all(self_: *mut Fl_Table, height: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_set_col_width_all(self_: *mut Fl_Table, width: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_set_row_position(self_: *mut Fl_Table, row: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_set_col_position(self_: *mut Fl_Table, col: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_row_position(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_col_position(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_top_row(self_: *mut Fl_Table, row: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_top_row(self_: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_is_selected(
        self_: *mut Fl_Table,
        r: ::core::ffi::c_int,
        c: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_get_selection(
        self_: *mut Fl_Table,
        row_top: *mut ::core::ffi::c_int,
        col_left: *mut ::core::ffi::c_int,
        row_bot: *mut ::core::ffi::c_int,
        col_right: *mut ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_set_selection(
        self_: *mut Fl_Table,
        row_top: ::core::ffi::c_int,
        col_left: ::core::ffi::c_int,
        row_bot: ::core::ffi::c_int,
        col_right: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_move_cursor_with_shiftselect(
        self_: *mut Fl_Table,
        R: ::core::ffi::c_int,
        C: ::core::ffi::c_int,
        shiftselect: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_move_cursor(
        self_: *mut Fl_Table,
        R: ::core::ffi::c_int,
        C: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_scrollbar_size(self_: *const Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_set_scrollbar_size(self_: *mut Fl_Table, newSize: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_set_tab_cell_nav(self_: *mut Fl_Table, val: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_tab_cell_nav(self_: *const Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_draw_cell(
        self_: *mut Fl_Table,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                arg2: ::core::ffi::c_int,
                arg3: ::core::ffi::c_int,
                arg4: ::core::ffi::c_int,
                arg5: ::core::ffi::c_int,
                arg6: ::core::ffi::c_int,
                arg7: ::core::ffi::c_int,
                arg8: ::core::ffi::c_int,
                arg9: *mut ::core::ffi::c_void,
            ),
        >,
        data: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_draw_cell_data(self_: *const Fl_Table) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_set_draw_cell_data(self_: *mut Fl_Table, data: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_callback_col(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_callback_row(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_callback_context(arg1: *mut Fl_Table) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_scrollbar(arg1: *const Fl_Table) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_hscrollbar(arg1: *const Fl_Table) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_find_cell(
        self_: *const Fl_Table,
        ctx: ::core::ffi::c_int,
        r: ::core::ffi::c_int,
        c: ::core::ffi::c_int,
        x: *mut ::core::ffi::c_int,
        y: *mut ::core::ffi::c_int,
        w: *mut ::core::ffi::c_int,
        h: *mut ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_scroll(arg1: *const Fl_Table) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_cursor2rowcol(
        self_: *const Fl_Table,
        r: *mut ::core::ffi::c_int,
        c: *mut ::core::ffi::c_int,
        flag: *mut ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct Fl_Table_Row {
    _unused: [u8; 0],
}
unsafe extern "C" {
    pub fn Fl_Table_Row_new(
        x: ::core::ffi::c_int,
        y: ::core::ffi::c_int,
        width: ::core::ffi::c_int,
        height: ::core::ffi::c_int,
        title: *const ::core::ffi::c_char,
    ) -> *mut Fl_Table_Row;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_x(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_y(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_width(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_height(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_label(arg1: *mut Fl_Table_Row) -> *const ::core::ffi::c_char;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_label(arg1: *mut Fl_Table_Row, title: *const ::core::ffi::c_char);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_redraw(arg1: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_show(arg1: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_hide(arg1: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_activate(arg1: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_deactivate(arg1: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_redraw_label(arg1: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_resize(
        arg1: *mut Fl_Table_Row,
        x: ::core::ffi::c_int,
        y: ::core::ffi::c_int,
        width: ::core::ffi::c_int,
        height: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_widget_resize(
        arg1: *mut Fl_Table_Row,
        x: ::core::ffi::c_int,
        y: ::core::ffi::c_int,
        width: ::core::ffi::c_int,
        height: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_tooltip(arg1: *mut Fl_Table_Row) -> *const ::core::ffi::c_char;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_tooltip(arg1: *mut Fl_Table_Row, txt: *const ::core::ffi::c_char);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_get_type(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_type(arg1: *mut Fl_Table_Row, typ: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_color(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_color(arg1: *mut Fl_Table_Row, color: ::core::ffi::c_uint);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_measure_label(
        arg1: *const Fl_Table_Row,
        arg2: *mut ::core::ffi::c_int,
        arg3: *mut ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_label_color(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_label_color(arg1: *mut Fl_Table_Row, color: ::core::ffi::c_uint);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_label_font(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_label_font(arg1: *mut Fl_Table_Row, font: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_label_size(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_label_size(arg1: *mut Fl_Table_Row, sz: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_label_type(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_label_type(arg1: *mut Fl_Table_Row, typ: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_box(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_box(arg1: *mut Fl_Table_Row, typ: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_changed(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_changed(arg1: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_clear_changed(arg1: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_align(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_align(arg1: *mut Fl_Table_Row, typ: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_delete(arg1: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_image(arg1: *mut Fl_Table_Row, arg2: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_handle(
        self_: *mut Fl_Table_Row,
        cb: custom_handler_callback,
        data: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_handle_event(
        self_: *mut Fl_Table_Row,
        event: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_draw(
        self_: *mut Fl_Table_Row,
        cb: custom_draw_callback,
        data: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_resize_callback(
        self_: *mut Fl_Table_Row,
        cb: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                x: ::core::ffi::c_int,
                y: ::core::ffi::c_int,
                w: ::core::ffi::c_int,
                h: ::core::ffi::c_int,
                arg2: *mut ::core::ffi::c_void,
            ),
        >,
        data: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_when(arg1: *mut Fl_Table_Row, arg2: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_when(arg1: *const Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_image(arg1: *const Fl_Table_Row) -> *const ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_parent(self_: *const Fl_Table_Row) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_selection_color(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_selection_color(arg1: *mut Fl_Table_Row, color: ::core::ffi::c_uint);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_do_callback(arg1: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_inside(
        self_: *const Fl_Table_Row,
        arg1: *mut ::core::ffi::c_void,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_window(arg1: *const Fl_Table_Row) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_top_window(arg1: *const Fl_Table_Row) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_takes_events(arg1: *const Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_user_data(arg1: *const Fl_Table_Row) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_take_focus(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_visible_focus(self_: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_clear_visible_focus(self_: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_visible_focus(self_: *mut Fl_Table_Row, v: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_has_visible_focus(self_: *mut Fl_Table_Row) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_user_data(arg1: *mut Fl_Table_Row, data: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_draw_data(self_: *const Fl_Table_Row) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_handle_data(self_: *const Fl_Table_Row) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_draw_data(self_: *mut Fl_Table_Row, data: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_handle_data(self_: *mut Fl_Table_Row, data: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_damage(self_: *const Fl_Table_Row) -> ::core::ffi::c_uchar;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_damage(self_: *mut Fl_Table_Row, flag: ::core::ffi::c_uchar);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_damage_area(
        self_: *mut Fl_Table_Row,
        flag: ::core::ffi::c_uchar,
        x: ::core::ffi::c_int,
        y: ::core::ffi::c_int,
        w: ::core::ffi::c_int,
        h: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_clear_damage(self_: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_as_window(self_: *mut Fl_Table_Row) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_as_group(self_: *mut Fl_Table_Row) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_deimage(arg1: *mut Fl_Table_Row, arg2: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_deimage(arg1: *const Fl_Table_Row) -> *const ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_callback(
        arg1: *mut Fl_Table_Row,
        arg2: Fl_Callback,
        arg3: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_visible(self_: *const Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_visible_r(self_: *const Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_active(self_: *const Fl_Table_Row) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_active_r(self_: *const Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_callback(self_: *const Fl_Table_Row) -> Fl_Callback;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_deletion_callback(
        self_: *mut Fl_Table_Row,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(arg1: *mut Fl_Widget, arg2: *mut ::core::ffi::c_void),
        >,
        data: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_from_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Table_Row;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_from_derived_dyn_ptr(ptr: *mut Fl_Widget) -> *mut Fl_Table_Row;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_super_draw(ptr: *mut Fl_Widget, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_super_draw_first(ptr: *mut Fl_Widget, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_super_handle_first(ptr: *mut Fl_Widget, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_begin(self_: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_end(self_: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_find(
        self_: *mut Fl_Table_Row,
        arg1: *const ::core::ffi::c_void,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_add(self_: *mut Fl_Table_Row, arg1: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_insert(
        self_: *mut Fl_Table_Row,
        arg1: *mut ::core::ffi::c_void,
        pos: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_remove(self_: *mut Fl_Table_Row, wid: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_remove_by_index(self_: *mut Fl_Table_Row, idx: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_clear(self_: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_children(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_child(arg1: *mut Fl_Table_Row, index: ::core::ffi::c_int)
    -> *mut Fl_Widget;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_resizable(self_: *mut Fl_Table_Row, arg1: *mut ::core::ffi::c_void);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_clip_children(self_: *mut Fl_Table_Row, c: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_clip_children(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_init_sizes(self_: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_draw_child(self_: *const Fl_Table_Row, w: *mut Fl_Widget);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_update_child(self_: *const Fl_Table_Row, w: *mut Fl_Widget);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_draw_outside_label(self_: *const Fl_Table_Row, w: *const Fl_Widget);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_draw_children(self_: *mut Fl_Table_Row);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_table_box(self_: *mut Fl_Table_Row, val: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_table_box(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_rows(self_: *mut Fl_Table_Row, val: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_rows(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_cols(self_: *mut Fl_Table_Row, val: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_cols(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_visible_cells(
        self_: *mut Fl_Table_Row,
        r1: *mut ::core::ffi::c_int,
        r2: *mut ::core::ffi::c_int,
        c1: *mut ::core::ffi::c_int,
        c2: *mut ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_is_interactive_resize(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_row_resize(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_row_resize(self_: *mut Fl_Table_Row, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_col_resize(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_col_resize(self_: *mut Fl_Table_Row, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_col_resize_min(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_col_resize_min(self_: *mut Fl_Table_Row, val: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_row_resize_min(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_row_resize_min(self_: *mut Fl_Table_Row, val: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_row_header(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_row_header(self_: *mut Fl_Table_Row, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_col_header(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_col_header(self_: *mut Fl_Table_Row, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_col_header_height(self_: *mut Fl_Table_Row, height: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_col_header_height(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_row_header_width(self_: *mut Fl_Table_Row, width: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_row_header_width(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_row_header_color(self_: *mut Fl_Table_Row, val: ::core::ffi::c_uint);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_row_header_color(self_: *mut Fl_Table_Row) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_col_header_color(self_: *mut Fl_Table_Row, val: ::core::ffi::c_uint);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_col_header_color(self_: *mut Fl_Table_Row) -> ::core::ffi::c_uint;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_row_height(
        self_: *mut Fl_Table_Row,
        row: ::core::ffi::c_int,
        height: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_row_height(
        self_: *mut Fl_Table_Row,
        row: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_col_width(
        self_: *mut Fl_Table_Row,
        col: ::core::ffi::c_int,
        width: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_col_width(
        self_: *mut Fl_Table_Row,
        col: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_row_height_all(self_: *mut Fl_Table_Row, height: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_col_width_all(self_: *mut Fl_Table_Row, width: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_row_position(self_: *mut Fl_Table_Row, row: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_col_position(self_: *mut Fl_Table_Row, col: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_row_position(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_col_position(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_top_row(self_: *mut Fl_Table_Row, row: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_top_row(self_: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_is_selected(
        self_: *mut Fl_Table_Row,
        r: ::core::ffi::c_int,
        c: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_get_selection(
        self_: *mut Fl_Table_Row,
        row_top: *mut ::core::ffi::c_int,
        col_left: *mut ::core::ffi::c_int,
        row_bot: *mut ::core::ffi::c_int,
        col_right: *mut ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_selection(
        self_: *mut Fl_Table_Row,
        row_top: ::core::ffi::c_int,
        col_left: ::core::ffi::c_int,
        row_bot: ::core::ffi::c_int,
        col_right: ::core::ffi::c_int,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_move_cursor_with_shiftselect(
        self_: *mut Fl_Table_Row,
        R: ::core::ffi::c_int,
        C: ::core::ffi::c_int,
        shiftselect: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_move_cursor(
        self_: *mut Fl_Table_Row,
        R: ::core::ffi::c_int,
        C: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_scrollbar_size(self_: *const Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_scrollbar_size(self_: *mut Fl_Table_Row, newSize: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_tab_cell_nav(self_: *mut Fl_Table_Row, val: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_tab_cell_nav(self_: *const Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_draw_cell(
        self_: *mut Fl_Table_Row,
        arg1: ::core::option::Option<
            unsafe extern "C" fn(
                arg1: *mut Fl_Widget,
                arg2: ::core::ffi::c_int,
                arg3: ::core::ffi::c_int,
                arg4: ::core::ffi::c_int,
                arg5: ::core::ffi::c_int,
                arg6: ::core::ffi::c_int,
                arg7: ::core::ffi::c_int,
                arg8: ::core::ffi::c_int,
                arg9: *mut ::core::ffi::c_void,
            ),
        >,
        data: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_draw_cell_data(self_: *const Fl_Table_Row) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_set_draw_cell_data(
        self_: *mut Fl_Table_Row,
        data: *mut ::core::ffi::c_void,
    );
}
unsafe extern "C" {
    pub fn Fl_Table_Row_callback_col(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_callback_row(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_callback_context(arg1: *mut Fl_Table_Row) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_scrollbar(arg1: *const Fl_Table_Row) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_hscrollbar(arg1: *const Fl_Table_Row) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_find_cell(
        self_: *const Fl_Table_Row,
        ctx: ::core::ffi::c_int,
        r: ::core::ffi::c_int,
        c: ::core::ffi::c_int,
        x: *mut ::core::ffi::c_int,
        y: *mut ::core::ffi::c_int,
        w: *mut ::core::ffi::c_int,
        h: *mut ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_scroll(arg1: *const Fl_Table_Row) -> *mut ::core::ffi::c_void;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_cursor2rowcol(
        self_: *const Fl_Table_Row,
        r: *mut ::core::ffi::c_int,
        c: *mut ::core::ffi::c_int,
        flag: *mut ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_row_selected(
        self_: *mut Fl_Table_Row,
        row: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_select_row(
        self_: *mut Fl_Table_Row,
        row: ::core::ffi::c_int,
        flag: ::core::ffi::c_int,
    ) -> ::core::ffi::c_int;
}
unsafe extern "C" {
    pub fn Fl_Table_Row_select_all_rows(self_: *mut Fl_Table_Row, flag: ::core::ffi::c_int);
}
unsafe extern "C" {
    pub fn Fl_Table_Row_clear_rows(self_: *mut Fl_Table_Row);
}
